<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:lang="http://www.springframework.org/schema/lang" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	         http://www.springframework.org/schema/beans/spring-beans.xsd
	         http://www.springframework.org/schema/lang
	         http://www.springframework.org/schema/lang/spring-lang.xsd
	         http://www.springframework.org/schema/tx
	         http://www.springframework.org/schema/tx/spring-tx.xsd
	         http://www.springframework.org/schema/aop
	         http://www.springframework.org/schema/aop/spring-aop.xsd
	         http://www.springframework.org/schema/mvc
	         http://www.springframework.org/schema/mvc/spring-mvc.xsd
	         http://www.springframework.org/schema/context
	         http://www.springframework.org/schema/context/spring-context.xsd
	         http://www.springframework.org/schema/cache
	         http://www.springframework.org/schema/cache/spring-cache.xsd
	         http://www.springframework.org/schema/task
	         http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

    <context:component-scan base-package="com.moxingwang.springmvc"></context:component-scan>


    <bean id="springUtils" class="com.moxingwang.util.SpringContextUtil"/>
    <bean id="forward"  class="com.moxingwang.base.controller.ForwardController"/>
    <!-- Session管理器 -->
    <bean id="sessionManager" class="com.moxingwang.core.session.redis.RedisSessionManager">
        <property name="expireTime" value="60"/>
    </bean>
    <!-- 异常管理器 -->
    <bean id="exceptionController" class="com.moxingwang.exception.GlobalExceptionController"/>


    <mvc:default-servlet-handler />
    <!-- spring 4 mvc 基于注解在方法上 控制映射 配置 -->
    <mvc:annotation-driven />


    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" />
            </list>
        </property>
    </bean>

    <!-- 解决乱码问题 -->
    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
          id="mappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!--多语言配置 start -->
    <bean id="messageUtil" class="com.moxingwang.util.MessageUtil"></bean>
    <!--消息更新:很多生产系统都需要长时间持续运行，系统重启会给运行带来很大的负面影响。这时，通过该实现类就可以解决国际化信息更新的问题。-->
    <bean id="messageSource"  class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="useCodeAsDefaultMessage" value="true" />
        <property name="basenames">
            <list>
                <value>classpath:messages/message</value>
            </list>
        </property>
        <!-- 刷新资源文件的周期，以秒为单位-->
        <property name="cacheSeconds" value="5000"/>
    </bean>
    <!--多语言配置 end -->

    <!-- 静态资源(js/image/css)的访问 -->
    <mvc:resources mapping="/*/**" location="/WEB-INF/pages/" />
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/login/**"/>
            <mvc:exclude-mapping path="/test/test"/>
            <mvc:exclude-mapping path="/hello.jsp"/>
            <mvc:exclude-mapping path="/js/**"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/images/**"/>
            <bean class="com.moxingwang.interceptor.AccessInterceptor">
                <property name="loginUrl">
                    <value>/hello.jsp</value>
                </property>
            </bean>
        </mvc:interceptor>
        <!-- mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/login/**"/>
            <mvc:exclude-mapping path="/jsp/login.html"/>
            <mvc:exclude-mapping path="/js/**"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/images/**"/>
            <bean class="com.moxingwanggwang.interceptor.HeaderInterceptor">
            </bean>
        </mvc:interceptor-->
    </mvc:interceptors>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8" />
        <property name="maxUploadSize" value="1048576000" />
        <property name="maxInMemorySize" value="40960" />
    </bean>


    <!-- aop start-->
    <!--Controller异常日志处理-->
    <bean id="controllerThrowsAdvice" class="com.moxingwang.springmvc.common.aop.ControllerThrowsAdvice" />
    <aop:config>
        <aop:advisor pointcut="execution(* com.moxingwang.springmvc.controller..*.*(..))"  advice-ref="controllerThrowsAdvice" />
    </aop:config>
    <!-- aop end-->


    <!--定时任务配置 start-->
    <!-- 启动触发器的配置开始 -->
    <bean name="startQuertz" lazy-init="false" autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="myJobTrigger" />
            </list>
        </property>
    </bean>
    <!-- 启动触发器的配置结束 -->
    <!-- quartz-2.x的配置 -->
    <bean id="myJobTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="myJobDetail" />
        </property>
        <property name="cronExpression">
            <!--一分钟触发一次-->
            <!--<value>0 0/1 * * * ?</value>-->
            <!--每天12点触发-->
            <value>0 0 7 * * ?</value>
        </property>
    </bean>
    <!-- 调度的配置结束 -->
    <!-- job的配置开始 -->
    <bean id="myJobDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="targetMethod">
            <value>execute</value>
        </property>
    </bean>
    <!-- job的配置结束 -->
    <!-- 工作的bean -->
    <bean id="myJob" class="com.moxingwang.springmvc.common.task.task1.TestJob" />
    <!--定时任务配置 end-->


    <!--websocket start-->
    <bean id="websocket" class="com.moxingwang.springmvc.common.websocket.handler.WebsocketEndPoint"/>

    <websocket:handlers>
        <websocket:mapping path="/websocket" handler="websocket"/>
        <websocket:handshake-interceptors>
            <bean class="com.moxingwang.springmvc.common.websocket.HandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>
    <!--websocket end-->


</beans>
