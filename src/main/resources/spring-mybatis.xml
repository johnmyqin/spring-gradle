<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	         http://www.springframework.org/schema/beans/spring-beans.xsd
	         http://www.springframework.org/schema/tx
 			 http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
 			 http://www.springframework.org/schema/context
 			 http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 自动扫描 -->
    <context:component-scan base-package="com.mo"/>

    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:database.properties" />
    </bean>

    <!-- mysql start -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClass}" />		<!-- 数据库驱动 -->
        <property name="jdbcUrl" value="${jdbc.url}" />		<!-- 连接URL串 -->
        <property name="user" value="${jdbc.user}" />		<!-- 连接用户名 -->
        <property name="password" value="${jdbc.password}" />		<!-- 连接密码 -->
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}" />		<!-- 初始化连接池时连接数量为5个 -->
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />		<!-- 允许最小连接数量为5个 -->
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />		<!-- 允许最大连接数量为20个 -->
        <property name="numHelperThreads" value="${jdbc.numHelperThreads}" />			<!-- 允许最大连接数量为20个 -->
        <property name="maxStatements" value="${jdbc.maxStatements}" />		<!-- 允许连接池最大生成100个PreparedStatement对象 -->
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}" />		<!-- 连接有效时间，连接超过3600秒未使用，则该连接丢弃 -->
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}" />		<!-- 连接用完时，一次产生的新连接步进值为2 -->
        <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}" />		<!-- 获取连接失败后再尝试10次，再失败则返回DAOException异常 -->
        <property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}" />		<!-- 获取下一次连接时最短间隔600毫秒，有助于提高性能 -->
        <property name="testConnectionOnCheckin" value="${jdbc.testConnectionOnCheckin}" />		<!-- 检查连接的有效性，此处小弟不是很懂什么意思 -->
        <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />		<!-- 每个1200秒检查连接对象状态 -->
        <property name="checkoutTimeout" value="${jdbc.checkoutTimeout}" />		<!-- 获取新连接的超时时间为10000毫秒 -->
    </bean>

    <!-- 事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" ></tx:annotation-driven>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--<property name="mapperLocations" value="classpath:classes/com/mo/mapper/mysql_user/**/*.xml" />-->
        <!--<property name="mapperLocations" value="com/mo/mapper/mysql_user/**/*.xml" />-->
        <property name="mapperLocations" value="com.mo.mapper.mysql_user.**.*.xml" />
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="annotationClass" value="org.springframework.stereotype.Repository" />
        <property name="basePackage" value="com.mo.dao.mysql_user.*" />
    </bean>
    <!-- mysql end-->




    <!--<bean id="springContextUtil" class="com.ihefe.nurses.util.SpringContextUtil" />-->

    <!--<bean id="singleParamUtil" class="com.ihefe.nurses.util.SingleParamUtil" init-method="loadSingleParams"/>-->

    <!--<bean id="messageUtil" class="com.ihefe.nurses.util.MessageUtil"  init-method="loadMessageCode"></bean>-->


</beans>
